.chatContainer {
    display: flex;
    flex-direction: column;
    min-height: 100%;
    background-color: var(--light-beige); /* This keeps your normal color */
    background-image: url('../assets/chat-bg.png'); /* This shows your pattern */
    background-repeat: repeat; /* This tiles the pattern to fill the whole area */
    background-size: 350px 350px; /* You can change this number to make the pattern bigger or smaller */
}


.messageList {
    flex: 1;
    padding: 20px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

/* Hide scrollbar for webkit browsers */
.messageList::-webkit-scrollbar {
    display: none;
}

/* Hide scrollbar for Firefox */
.messageList {
    scrollbar-width: none;
}

.message {
    padding: 10px 15px;
    border-radius: 18px;
    margin-bottom: 10px;
    max-width: 80%;
    line-height: 1.5;
    width: fit-content;
    word-wrap: break-word;
}

.user {
    background-color: var(--user-bubble);
    color: var(--user-text);
    align-self: flex-end;
    margin-left: auto;
}

.bot {
    background-color: var(--bot-bubble);
    color: var(--bot-text);
    align-self: flex-start;
}

.inputArea {
    display: flex;
    align-items: flex-end;
    padding: 10px;
    border-top: 1px solid var(--border);
}

.messageInput {
    flex: 1;
    padding: 10px;
    border: 1px solid var(--border);
    border-radius: 20px;
    margin-right: 10px;
    background-color: var(--bg);
    color: var(--card-fg);
    resize: none;
    overflow-y: auto;
    min-height: 40px;
    max-height: 150px;
    height: 40px;
    font-family: inherit;
    font-size: inherit;
    line-height: 1.4;
    transition: height 0.1s ease-out;
    box-sizing: border-box;
}

/* Hide scrollbar for textarea */
.messageInput::-webkit-scrollbar {
    display: none;
}

.messageInput {
    scrollbar-width: none;
}

.messageInput:focus {
    outline: none;
    border-color: var(--primary-orange);
}

.messageInput:disabled {
    background-color: var(--disabled-bg);
    cursor: not-allowed;
}

.inputArea button {
    padding: 10px 20px;
    border: none;
    background-color: var(--primary-orange);
    color: var(--white);
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.3s ease;
    height: fit-content;
    flex-shrink: 0;
    width: 40px;          /* Set fixed width */
    height: 40px;         /* Set fixed height (matches textarea min-height) */
    border-radius: 50%;   /* Make it a circle */
    padding: 0;           /* Remove old padding */
    display: flex;        /* Add flex to center icon */
    align-items: center;  /* Center vertically */
    justify-content: center; /* Center horizontally */
}

.inputArea button:hover:not(:disabled) {
    background-color: var(--primary-orange-dark);
    transform: translateY(-1px);
}

.inputArea button:disabled {
    background-color: var(--disabled-bg);
    cursor: not-allowed;
    opacity: 0.7;
    color: rgba(0, 0, 0, 0.3);
}

.loading {
    position: relative;
    overflow: hidden;
}

.loading::after {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 200%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
    );
    animation: loading 1.5s infinite;
}

@keyframes loading {
    from {
        transform: translateX(0);
    }
    to {
        transform: translateX(100%);
    }
}

.consentContainer {
    padding: 20px; /* Reduced padding for mobile */
    text-align: center;
    max-width: 500px;     /* Constrain width on larger screens */
    margin: 0 auto;       /* Center the container horizontally */
    
    /* --- Add these lines for vertical centering --- */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 80vh; /* Use min-height to fill the screen */
}

.consentButtons {
    margin-top: 20px;
    display: flex;          /* Use flexbox for buttons */
    flex-direction: column; /* Stack buttons vertically by default */
    gap: 15px;              /* Add space between stacked buttons */
    width: 100%;            /* Make button container full-width */
}

.consentButtons button {
    padding: 12px 20px; /* Slightly larger for better tap targets */
    margin: 0; /* Remove the old '0 10px' margin */
    cursor: pointer;
    background-color: var(--primary-orange);
    color: var(--white);
    border: none;
    border-radius: 20px;
    transition: background-color 0.3s;
    font-size: 1rem; /* Ensure readable font size */
    width: 100%;     /* Make buttons full-width */
}

.consentButtons button:hover {
    background-color: var(--primary-orange-dark);
}

/* --- Add this media query for larger screens --- */
@media (min-width: 600px) {
    .consentContainer {
        padding: 40px; /* Restore larger padding on desktop */
    }

    .consentButtons {
        flex-direction: row; /* Go back to side-by-side */
        justify-content: center;
        width: auto;       /* Allow container to shrink */
    }

    .consentButtons button {
        width: auto; /* Allow buttons to size to content */
    }
}

.errorContainer {
    padding: 10px 20px;
    margin: 10px;
    background-color: var(--error-bg);
    border-radius: 8px;
    border-left: 4px solid var(--error);
}

.errorMessage {
    color: var(--error);
    margin: 0;
    font-size: 0.9em;
}

.pageLoaderContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 80vh; 
  width: 100%;
}

.pageSpinner {
  width: 48px;
  height: 48px;
  border: 5px solid var(--light-beige); /* Light part of the circle */
  border-top-color: var(--primary-orange); /* Branded color */
  border-radius: 50%;
  animation: spin 1s ease-in-out infinite; /* Re-use existing animation */
}

.loadingSpinner {
  width: 18px;
  height: 18px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top-color: var(--white, #FFFFFF);
  border-radius: 50%;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.card {
  background: var(--card, #F4F1E8); /* Uses your theme’s card color */
  color: var(--card-fg, #333333);   /* Uses your theme’s card text color */
  border: 1px solid var(--border, #E0DACA); /* Theme border */
  border-radius: 16px;
  padding: 38px 32px;
  max-width: 430px;
  width: 100%;
  box-shadow: 0 4px 22px rgba(150, 105, 65, 0.06);
  margin: 32px 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}
